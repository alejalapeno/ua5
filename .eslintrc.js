const styleRules = {
    "array-bracket-newline": ["error", { "multiline": true }],
    "array-bracket-spacing": ["error", "never"],
    "array-element-newline": ["error", "consistent"],
    "arrow-body-style": ["error", "always"],
    "arrow-parens": "error",
    "arrow-spacing": "error",
    "block-spacing": "error",
    "brace-style": "error",
    "comma-dangle": ["error", "always-multiline"],
    "comma-spacing": "error",
    "comma-style": "error",
    "computed-property-spacing": ["error", "never"],
    "eol-last": "error",
    "func-call-spacing": "error",
    "function-paren-newline": ["error", "multiline"],
    "indent": ["error", "tab"],
    "key-spacing": "error",
    "keyword-spacing": ["error", { "after": true }],
    "linebreak-style": ["error", "unix"],
    "lines-between-class-members": "error",
    "multiline-comment-style": ["error", "separate-lines"],
    "new-parens": "error",
    "newline-per-chained-call": "error",
    "no-lonely-if": "error",
    "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 1 }],
    "no-trailing-spaces": "error",
    "no-unneeded-ternary": "error",
    "no-whitespace-before-property": "error",
    "object-curly-newline": ["error", { "multiline": true }],
    "object-curly-spacing": "error",
    "object-property-newline": "error",
    "one-var-declaration-per-line": ["error", "always"],
    "operator-linebreak": ["error", "before", { "overrides": { "?": "ignore", ":": "ignore" } }],
    "padding-line-between-statements": [
        "error",
        { "blankLine": "always", "prev": "*",         "next": "return" },
        { "blankLine": "always", "prev": "directive", "next": "*" },
        { "blankLine": "any",    "prev": "directive", "next": "directive" },
    ],
    "prefer-object-spread": "error",
    "quote-props": ["error", "consistent-as-needed"],
    "quotes": ["error", "single", { "avoidEscape": true }],
    "semi": "error",
    "semi-spacing": ["error", {"before": false, "after": false}],
    "semi-style": ["error", "last"],
    "space-before-blocks": "error",
    "space-before-function-paren": ["error", "never"],
    "space-in-parens": "error",
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "spaced-comment": "error",
    "switch-colon-spacing": "error",
    "template-tag-spacing": "error",
    "unicode-bom": "error",
    "wrap-regex": "error",
};

const syntaxRules = {
    "no-console": ["error", { "allow": ["warn", "error"] }],
    "no-template-curly-in-string": "error",
    "accessor-pairs": "error",
    "array-callback-return": "error",
    "array-element-newline": ["error", "consistent"],
    "block-scoped-var": "error",
    "callback-return": "error",
    "class-methods-use-this": "error",
    "complexity": "error",
    "consistent-this": ["error", "_this"],
    "curly": "error",
    "default-case": "error",
    "dot-location": "error",
    "eqeqeq": "error",
    "func-names": "error",
    "generator-star-spacing": "error",
    "global-require": "error",
    "guard-for-in": "error",
    "handle-callback-err": "error",
    "new-cap": "error",
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-await-in-loop": "error",
    "no-bitwise": "error",
    "no-buffer-constructor": "error",
    "no-caller": "error",
    "no-confusing-arrow": "error",
    "no-continue": "error",
    "no-div-regex": "error",
    "no-duplicate-imports": "error",
    "no-else-return": "error",
    "no-empty-function": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-label": "error",
    "no-extra-parens": ["error", "all", { ignoreJSX: "multi-line" }],
    "no-floating-decimal": "error",
    "no-implicit-coercion": "error",
    "no-implicit-globals": "error",
    "no-implied-eval": "error",
    "no-invalid-this": "off",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-loop-func": "error",
    "no-mixed-operators": "error",
    "no-mixed-requires": "error",
    "no-mixed-spaces-and-tabs": ["error", "smart-tabs"],
    "no-multi-assign": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-multiple-empty-lines": "error",
    "no-nested-ternary": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-require": "error",
    "no-new-wrappers": "error",
    "no-octal-escape": "error",
    "no-param-reassign": "error",
    "no-path-concat": "error",
    "no-process-exit": "error",
    "no-proto": "error",
    "no-restricted-globals": "error",
    "no-restricted-imports": "error",
    "no-restricted-modules": "error",
    "no-restricted-properties": "error",
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-shadow": "error",
    "no-sync": "error",
    "no-template-curly-in-string": "error",
    "no-throw-literal": "error",
    "no-undef-init": "error",
    "no-unmodified-loop-condition": "error",
    "no-use-before-define": ["error", { "functions": false }],
    "no-useless-call": "error",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-constructor": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "object-shorthand": "error",
    "one-var-declaration-per-line": "error",
    "prefer-arrow-callback": "error",
    "prefer-const": "off",
    "prefer-destructuring": "off",
    "prefer-named-capture-group": "error",
    "prefer-numeric-literals": "error",
    "prefer-promise-reject-errors": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    "radix": "error",
    "rest-spread-spacing": "error",
    "strict": "error",
    "symbol-description": "error",
    "template-curly-spacing": "error",
    "vars-on-top": "error",
    "wrap-iife": "error",
    "yield-star-spacing": "error",
    "yoda": [
        "error",
        "never"
	],
	"react-hooks/rules-of-hooks": "error",
	"react-hooks/exhaustive-deps": "warn",
	"react/react-in-jsx-scope": "off",
	"react/prop-types": "off"
};

const flags = ['--fix', '--fix-dry-run'];

const rules = flags.some(flag => process.argv.includes(flag)) ? Object.assign(styleRules, syntaxRules) : syntaxRules;

module.exports = {
	"parser": "@typescript-eslint/parser",
    "plugins": [
		"@typescript-eslint",
		"jest",
		"react",
		"react-hooks"
	],
    "env": {
        "browser": true,
        "es6": true,
		"jest/globals": true,
		"node": true
    },
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/eslint-recommended",
   		"plugin:@typescript-eslint/recommended",
		"plugin:react/recommended"
	],
    "parserOptions": {
        "ecmaVersion": 2020,
		"sourceType": "module",
		"ecmaFeatures": {
            "jsx": true
        }
    },
    "rules": rules
}